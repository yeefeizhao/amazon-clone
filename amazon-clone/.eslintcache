[{"C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\index.js":"1","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\App.js":"2","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\reportWebVitals.js":"3","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Header.js":"4","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Home.js":"5","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Product.js":"6","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Checkout.js":"7","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Subtotal.js":"8","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\StateProvider.js":"9","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\reducer.js":"10","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\CheckoutProduct.js":"11","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Login.js":"12","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\firebase.js":"13","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Payment.js":"14","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\axios.js":"15","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Orders.js":"16","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Order.js":"17"},{"size":688,"mtime":1609387109335,"results":"18","hashOfConfig":"19"},{"size":1804,"mtime":1609567903190,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2480,"mtime":1609572766276,"results":"22","hashOfConfig":"19"},{"size":3279,"mtime":1609314453257,"results":"23","hashOfConfig":"19"},{"size":1293,"mtime":1609387494122,"results":"24","hashOfConfig":"19"},{"size":1262,"mtime":1609474232505,"results":"25","hashOfConfig":"19"},{"size":1219,"mtime":1609471893182,"results":"26","hashOfConfig":"19"},{"size":484,"mtime":1609386423797,"results":"27","hashOfConfig":"19"},{"size":1317,"mtime":1609572776753,"results":"28","hashOfConfig":"19"},{"size":1257,"mtime":1609572761647,"results":"29","hashOfConfig":"19"},{"size":2239,"mtime":1609399032608,"results":"30","hashOfConfig":"19"},{"size":521,"mtime":1609398267923,"results":"31","hashOfConfig":"19"},{"size":5958,"mtime":1609572772378,"results":"32","hashOfConfig":"19"},{"size":252,"mtime":1609572768325,"results":"33","hashOfConfig":"19"},{"size":1121,"mtime":1609572764271,"results":"34","hashOfConfig":"19"},{"size":1482,"mtime":1609572769085,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"e1dc7e",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"38"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},"C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\index.js",[],["81","82"],"C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\App.js",["83","84"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Checkout from './Checkout';\nimport Login from './Login';\nimport { auth } from './firebase'\nimport { useStateValue } from './StateProvider';\nimport Payment from './Payment';\nimport { loadStripe } from '@stripe/stripe-js'\nimport { Elements } from '@stripe/react-stripe-js'\nimport Orders from './Orders';\n\nconst promise = loadStripe(\n  \"pk_test_51I4fOsBPF0iSYWicXlU4s4c8gKH0yenkxXTh28cyuBUPiZcNfkj7fopgQ6JcWHNQ9uxOwekmjmWA3n1GraYkDxHv00tGPJoKT8\"\n  );\n\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n\n\n  useEffect(() => {\n    auth.onAuthStateChanged(authUser => {\n      console.log('the user is: ', authUser);\n\n      if (authUser) {\n        //user logged in or was logged in\n        dispatch({\n          type: 'SET_USER',\n          user: authUser\n        });\n      } else {\n        //user is logged out\n        dispatch({\n          type: 'SET_USER',\n          user: null\n        });\n      }\n    })\n  }, [])\n\n  return (\n    //BEM\n    <Router>\n      <div className=\"app\">\n        <Switch>\n\n          <Route path=\"/orders\">\n            <Header />\n            <Orders />\n          </Route>\n\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n\n          <Route path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}>\n              <Payment />\n            </Elements>\n          </Route>\n\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\reportWebVitals.js",[],"C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Header.js",["85"],"import React from 'react'\r\nimport './Header.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStateValue } from './StateProvider';\r\nimport { auth } from './firebase';\r\n\r\n\r\nfunction Header() {\r\n    const [{ cart, user }, dispatch] = useStateValue();\r\n\r\n    const handleAuthentication = () => {\r\n        if (user) {\r\n            auth.signOut();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='header'>\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n                <img className=\"header__logo\"\r\n                src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\" \r\n                alt=\"logo\"\r\n                />\r\n            </Link>\r\n            \r\n\r\n            <div className=\"header__search\">\r\n                <input className=\"header__searchInput\" type=\"text\" />\r\n                <SearchIcon className=\"header__searchIcon\" />\r\n            </div>\r\n\r\n            <div className=\"header__nav\">\r\n                <Link to={!user && \"/login\"} style={{ textDecoration: 'none' }}>\r\n                    <div onClick={handleAuthentication} className=\"header__option\">\r\n                        <span className=\"header__optionLineOne\">Hello{user ? \", \" + user.email : \"\"}</span>\r\n                        <span className=\"header__optionLineTwo\">{user ? \"Sign Out\" : \"Sign In\"}</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                <Link to=\"/orders\" style={{ textDecoration: 'none' }}>\r\n                    <div className=\"header__option\">\r\n                        <span className=\"header__optionLineOne\">Returns</span>\r\n                        <span className=\"header__optionLineTwo\">& Orders</span>\r\n                    </div>\r\n                </Link>\r\n\r\n                <div className=\"header__option\">\r\n                    <span className=\"header__optionLineOne\">Your</span>\r\n                    <span className=\"header__optionLineTwo\">Prime</span>\r\n                </div>\r\n                \r\n                <Link to=\"/checkout\" style={{ textDecoration: 'none' }}>\r\n                    <div className=\"header__optionCart\">\r\n                        <ShoppingCartIcon />\r\n                        <span className=\"header__optionLineTwo header__cartCount\">{cart?.length}</span>\r\n                    </div>\r\n                </Link>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Home.js",[],"C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Product.js",["86"],"import React from 'react'\r\nimport './Product.css'\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\nfunction Product({ id, title, image, price, rating }) {\r\n    const [{ cart }, dispatch] = useStateValue();\r\n    \r\n    const addToCart = () => {\r\n        //dispatch the item into the data layer\r\n        dispatch({\r\n            type: 'ADD_TO_CART',\r\n            item: {\r\n                id: id,\r\n                title: title,\r\n                image: image,\r\n                price: price,\r\n                rating: rating,\r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"product__info\">\r\n                <p>{title}</p>\r\n                <p className=\"product__price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div       \r\n                className=\"product__rating\">\r\n                    {Array(rating)\r\n                    .fill()\r\n                    .map((_, i) => (\r\n                        <p>⭐</p> \r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <img src={image} alt=\"product\" />\r\n\r\n            <button onClick={addToCart}>Add to Cart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Checkout.js",["87"],"import React from 'react'\r\nimport './Checkout.css'\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport { useStateValue } from './StateProvider'\r\nimport Subtotal from './Subtotal'\r\n\r\nfunction Checkout() {\r\n    const [{ cart, user }, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout__left\">\r\n                <img className=\"checkout__ad\" src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\" alt=\"ad\" />\r\n\r\n                <div>\r\n                    <h3>Hello{user ? \", \" + user?.email : \"\"}</h3>\r\n                    <h2 className=\"checkout__title\">Your Shopping Cart</h2>\r\n                    {cart.map(item => (\r\n                        <CheckoutProduct\r\n                            id={item.id}\r\n                            title={item.title}\r\n                            image={item.image}\r\n                            price={item.price}\r\n                            rating={item.rating}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"checkout__right\">\r\n                <Subtotal />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Subtotal.js",["88"],"import React from 'react'\r\nimport './Subtotal.css'\r\nimport CurrencyFormat from \"react-currency-format\"\r\nimport { useStateValue } from './StateProvider';\r\nimport { getCartTotal } from './reducer';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Subtotal() {\r\n    const history = useHistory();\r\n    const [{ cart }, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat\r\n                renderText={(value) => (\r\n                    <>\r\n                        <p>\r\n                            Subtotal ({cart?.length} items): <strong>{value}</strong>\r\n                        </p>\r\n                        <small className=\"subtotal__gift\">\r\n                            <input type=\"checkbox\" />This order contains a gift\r\n                        </small>\r\n                    </>\r\n                )}\r\n                decimalScale={2}\r\n                value={getCartTotal(cart)} \r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n            />\r\n\r\n            <button onClick={e => history.push('/payment')}>Proceed to Checkout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal\r\n","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\StateProvider.js",[],"C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\reducer.js",[],"C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\CheckoutProduct.js",["89","90"],"import React from 'react'\r\nimport './CheckoutProduct.css'\r\nimport { useStateValue } from './StateProvider'\r\n\r\nfunction CheckoutProduct({ id, image, title, price, rating, hideButton }) {\r\n    const [{ cart }, dispatch] = useStateValue();\r\n\r\n    const removeFromCart = () => {\r\n        //remove item from cart\r\n        dispatch({\r\n            type: 'DELETE',\r\n            id: id,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"checkoutProduct\">\r\n            <img class=\"checkoutProduct__image\" src={image} />\r\n\r\n            <div className=\"checkoutProduct__info\">\r\n                <p className=\"checkoutProduct__title\">{title}</p>\r\n                <p className=\"checkoutProduct__price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"checkoutProduct__rating\">\r\n                    {Array(rating)\r\n                    .fill()\r\n                    .map((_, i) => (\r\n                        <p>⭐</p>\r\n                    ))}\r\n                </div>\r\n                {!hideButton && (\r\n                    <button onClick={removeFromCart}>Delete</button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutProduct\r\n","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Login.js",[],"C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\firebase.js",[],"C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Payment.js",["91","92"],"import { DialogTitle } from '@material-ui/core';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport axios from './axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport './Payment.css'\r\nimport { getCartTotal } from './reducer';\r\nimport { useStateValue } from './StateProvider'\r\nimport { db } from './firebase';\r\n\r\nfunction Payment() {\r\n    const [{ cart, user }, dispatch] = useStateValue();\r\n    const history = useHistory();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // generate the special stripe secret which allows us to charge a customer\r\n        const getClientSecret = async () => {\r\n            const response = await axios({\r\n                method: 'post',\r\n                // Stripe expects the total in a currencies subunits\r\n                url: `/payments/create?total=${getCartTotal(cart) * 100}`\r\n            });\r\n            setClientSecret(response.data.clientSecret)\r\n        }\r\n\r\n        getClientSecret();\r\n    }, [cart])\r\n\r\n    console.log('client secret is >>>', clientSecret)\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            // paymentIntent is payment confirmation\r\n\r\n            db.collection('users')\r\n                .doc(user?.uid)\r\n                .collection('orders')\r\n                .doc(paymentIntent.id)\r\n                .set({\r\n                    cart: cart,\r\n                    amount: paymentIntent.amount,\r\n                    created: paymentIntent.created\r\n                })\r\n\r\n            setSucceeded(true);\r\n            setError(null)\r\n            setProcessing(false)\r\n\r\n            dispatch({\r\n                type: 'EMPTY_CART'\r\n            })\r\n\r\n            history.replace('/orders')\r\n        })\r\n\r\n    }\r\n\r\n    const handleChange = event => {\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <div className=\"payment__container\">\r\n\r\n                <h1>Checkout (<Link to='/checkout'>{cart?.length} items</Link>)</h1>\r\n                {/* payment sections - delivery */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className=\"payment__address\">\r\n                        <p>{user?.email}</p>\r\n                        <p>123 React Lane</p>\r\n                        <p>Los Angeles, CA</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* payment sections - review items */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Review Items and Delivery</h3>\r\n                    </div>\r\n                    <div className=\"payment__items\">\r\n                        {/* products */}\r\n                        {cart.map(item => (\r\n                            <CheckoutProduct \r\n                                id={item.id}\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price={item.price}\r\n                                rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* payment sections - payment method */}\r\n                <div className=\"payment__section\">\r\n                    <div className=\"payment__title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment__details\">\r\n                        {/* stripe */}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange}/>\r\n\r\n                            <div className=\"payment__priceContainer\">\r\n                                <CurrencyFormat\r\n                                    renderText={(value) => (\r\n                                        <>\r\n                                            <h3>\r\n                                                Order Total: {value}\r\n                                            </h3>\r\n                                        </>\r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={getCartTotal(cart)} \r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    prefix={\"$\"}\r\n                                />\r\n                                <button disabled={processing || disabled || succeeded}>\r\n                                    <span>\r\n                                        {processing ? <p>Processing</p> : \"Buy Now\"}\r\n                                    </span>\r\n                                </button>\r\n                            </div>\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\axios.js",[],"C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Orders.js",["93","94"],"import React, { useEffect, useState } from 'react'\r\nimport { db } from './firebase';\r\nimport Order from './Order';\r\nimport './Orders.css'\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Orders() {\r\n    const [{ cart, user }, dispatch] = useStateValue();\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n          db\r\n            .collection('users')\r\n            .doc(user?.uid)\r\n            .collection('orders')\r\n            .orderBy('created', 'desc')\r\n            .onSnapshot(snapshot => (\r\n                setOrders(snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })))\r\n            ))  \r\n        }\r\n        else {\r\n            setOrders([ ])\r\n        }\r\n        \r\n    }, [user])\r\n\r\n    return (\r\n        <div className=\"orders\">\r\n            <h1>Your Orders</h1>\r\n\r\n            <div className=\"orders__order\">\r\n                {orders?.map(order => (\r\n                    <Order order={order} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","C:\\Users\\yifei\\Documents\\Dev\\amazon-clone\\amazon-clone\\src\\Order.js",["95","96","97"],"import React from 'react'\r\nimport './Order.css'\r\nimport moment from 'moment';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { getCartTotal } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\n\r\n\r\nfunction Order({ order }) {\r\n    const [{ cart }, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"order\">\r\n            <h2>Order</h2>\r\n            <p>{moment.unix(order.data.created).format('MMMM Do YYYY, h:mma')}</p>\r\n            <p className=\"order__id\">\r\n                <small>{order.id}</small>\r\n            </p>\r\n            \r\n            {order.data.cart?.map(item => (\r\n                <CheckoutProduct \r\n                    id={item.id}\r\n                    title={item.title}\r\n                    image={item.image}\r\n                    price={item.price}\r\n                    rating={item.rating}\r\n                    hideButton\r\n                />\r\n            ))}\r\n\r\n            <CurrencyFormat\r\n                renderText={(value) => (\r\n                        <h3 className=\"order__total\">\r\n                            Order Total: {value}\r\n                        </h3>\r\n                )}\r\n                decimalScale={2}\r\n                value={order.data.amount / 100} \r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n            />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Order\r\n",["98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":20,"column":10,"nodeType":"106","messageId":"107","endLine":20,"endColumn":12},{"ruleId":"108","severity":1,"message":"109","line":41,"column":6,"nodeType":"110","endLine":41,"endColumn":8,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":11,"column":28,"nodeType":"114","messageId":"115","endLine":11,"endColumn":36},{"ruleId":"112","severity":1,"message":"116","line":7,"column":14,"nodeType":"114","messageId":"115","endLine":7,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":8,"column":28,"nodeType":"114","messageId":"115","endLine":8,"endColumn":36},{"ruleId":"112","severity":1,"message":"113","line":10,"column":22,"nodeType":"114","messageId":"115","endLine":10,"endColumn":30},{"ruleId":"112","severity":1,"message":"116","line":6,"column":14,"nodeType":"114","messageId":"115","endLine":6,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":18,"column":13,"nodeType":"119","endLine":18,"endColumn":63},{"ruleId":"112","severity":1,"message":"120","line":1,"column":10,"nodeType":"114","messageId":"115","endLine":1,"endColumn":21},{"ruleId":"112","severity":1,"message":"121","line":46,"column":15,"nodeType":"114","messageId":"115","endLine":46,"endColumn":22},{"ruleId":"112","severity":1,"message":"116","line":8,"column":14,"nodeType":"114","messageId":"115","endLine":8,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":8,"column":28,"nodeType":"114","messageId":"115","endLine":8,"endColumn":36},{"ruleId":"112","severity":1,"message":"122","line":6,"column":10,"nodeType":"114","messageId":"115","endLine":6,"endColumn":22},{"ruleId":"112","severity":1,"message":"116","line":11,"column":14,"nodeType":"114","messageId":"115","endLine":11,"endColumn":18},{"ruleId":"112","severity":1,"message":"113","line":11,"column":22,"nodeType":"114","messageId":"115","endLine":11,"endColumn":30},{"ruleId":"100","replacedBy":"123"},{"ruleId":"102","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["127"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'cart' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DialogTitle' is defined but never used.","'payload' is assigned a value but never used.","'getCartTotal' is defined but never used.",["125"],["126"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [dispatch]",{"range":"130","text":"131"},[1112,1114],"[dispatch]"]